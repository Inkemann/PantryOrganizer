@page "/pantry/{Id:guid}"
@page "/pantry"
@inject IStringLocalizer<App> Localizer
@inject IPantryService PantryService
@inject NavigationManager Navigation

<PageTitle>@Pantry.Name</PageTitle>

<EditForm Model="@Pantry" OnValidSubmit="@Save">
    <FluentValidationValidator DisableAssemblyScanning="true" />

    <div class="row gy-2 gy-md-4">
        <div class="col-12">
            <label class="form-label">@Localizer["Name"]</label>
            <InputText class="form-control" @bind-Value="Pantry.Name" />
            <ValidationMessage For="() => Pantry.Name"></ValidationMessage>
        </div>
        <button class="btn btn-primary" type="submit">
            @Localizer["Save"]
        </button>
        <button class="btn btn-danger" type="button" @onclick="() => Delete()">
            @Localizer["Delete"]
        </button>
        <a class="btn btn-secondary" type="button" href="pantries">
            @Localizer["Close"]
        </a>
    </div>
</EditForm>

@code {
    [Parameter]
    public Guid? Id { get; set; }

    private PantryDto Pantry { get; set; } = new PantryDto();

    protected override void OnParametersSet()
    {
        if (Id.HasValue)
        {
            var itemResult = PantryService.GetById(Id.Value);

            if (itemResult.IsSuccess)
                Pantry = itemResult.Result!;
        }
    }

    private void Save()
    {
        var result = PantryService.AddOrUpdate(Pantry);

        if (result.IsSuccess)
            Navigation.NavigateTo($"pantries");
    }

    private void Delete()
    {
        if (Id.HasValue)
        {
            PantryService.Delete(Pantry.Id);
            Navigation.NavigateTo("pantries");
        }
    }
}
