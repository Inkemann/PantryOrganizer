@page "/storageitems"
@inject IStorageItemService StorageItemService
@inject IPantryService PantryService
@inject IJSRuntime JsRuntime

<PageTitle>Storage items</PageTitle>

<div class="row gy-2 gy-md-4">
    <div class="col-12">
        <h1>Storage items</h1>
    </div>
    <div class="col-12">
        <table class="table table-striped">
            <colgroup>
                <col style="width: 60%" />
                <col style="width: 40%" />
            </colgroup>
            <SortingTableHead Sorting="Sorting">
                <tr>
                    <SortingTableHeader CssClass="align-top" @bind-SortingParameter="Sorting.Name" @bind-SortingParameter:after="UpdateList">
                        <InputText class="form-control" @bind-Value="Filter.Name" @bind-Value:after="UpdateList" />
                    </SortingTableHeader>
                    <th>
                        Quantity
                    </th>
                </tr>
            </SortingTableHead>
            @foreach (var pantry in Pantries)
            {
                <tbody>
                    <tr>
                        <td colspan="2">
                            <span>@pantry.Name</span>
                            <a class="btn btn-sm btn-primary float-end" href="@($"storageitem?PantryId={pantry.Id}")">
                                <span class="oi oi-plus"></span>
                            </a>
                        </td>
                    </tr>
                    @foreach (var storageItem in StorageItems.Where(item => item.PantryId == pantry.Id))
                    {
                        <tr>
                            <td>
                                <a href="@($"storageitem/{storageItem.Id}")"><span>@storageItem.Name</span></a>
                            </td>
                            <td>
                                <a href="@($"storageitem/{storageItem.Id}")">
                                    <span>
                                        @($"{storageItem.Quantity:G0} {(storageItem.Quantity == 1 ? storageItem.Unit?.Abbreviation : storageItem.Unit?.AbbreviationPlural)}")
                                    </span>
                                    @if (storageItem.RemainingPercentage.HasValue)
                                    {
                                        <span> (@($"{storageItem.RemainingPercentage:P0}") remaining)</span>
                                    }
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            }
        </table>
    </div>
    <div class="col-md-4 col-xxl-3">
    </div>
</div>

@code {
    public IEnumerable<StorageItemDto> StorageItems { get; set; } = new List<StorageItemDto>();

    public IEnumerable<PantryDto> Pantries { get; set; } = new List<PantryDto>();

    public StorageItemFilterDto Filter { get; set; } = new StorageItemFilterDto();

    public StorageItemSortingDto Sorting { get; set; } = new StorageItemSortingDto();

    protected override void OnInitialized()
    {
        UpdateList();
    }

    private void UpdateList()
    {
        StorageItems = StorageItemService.GetList(
           filter: Filter,
           sorting: Sorting);

        UpdatePantries();
    }

    private void UpdatePantries()
    {
        var pantries = PantryService.GetList();

        var requiredIds = StorageItems.Select(item => item.PantryId)
            .Distinct()
            .ToList();

        Pantries = pantries.Where(item => requiredIds.Contains(item.Id))
            .OrderBy(item => requiredIds.IndexOf(item.Id));
    }
}
